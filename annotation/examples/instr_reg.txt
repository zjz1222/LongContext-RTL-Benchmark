Module name:
    instr_reg

Function dataescription:
    An instruction register module designed to hold and process CPU instructions. It captures incoming instructions from various sources and separates them into distinct fields for further processing.

Input ports:
    clk: Clock signal for synchronization.
    rst: Active low reset signal to initialize the register.
    fetch [1:0]: Control signal indicating the source of the instruction (1 for register, 2 for RAM/ROM).
    data [7:0]: 8-bit data input representing the instruction to be fetched.

Output ports:
    ins [2:0]: High 3 bits of the instruction, indicating the opcode or operation.
    ad1 [4:0]: Low 5 bits of the instruction, representing the register address.
    ad2 [7:0]: The full 8-bit data from the second source.

Implementation:
    The instruction register contains two 8-bit registers (ins_p1 and ins_p2) to store instructions from different sources.
    On the rising edge of the clock (clk), if the reset (rst) signal is low, both registers are initialized to zero.
    Based on the fetch signal:
    If fetch is 2'b01, the instruction is fetched from the data input into ins_p1.
    If fetch is 2'b10, the instruction is fetched from the data input into ins_p2.
    If neither condition is met, the previous values in both registers are retained.
    The outputs ins, ad1, and ad2 are derived from the stored instructions.


